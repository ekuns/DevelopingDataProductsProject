Predicting Party Affiliation (by votes)
========================================================
author: Edward Kuns
date: Sunday, 24 May 2015
transition: rotate
font-family: Georgia, serif

Coursera Developing Data Products Course Project

Predicting Party Affiliation
========================================================

- Are you excited by news from the 1980s?
- Do you either hate or love President Ronald Reagan?
- Do you watch [CSPAN][cspan] every week?  (Or, at all?)
- Do you listen to talk radio because you enjoy intense discussion? Or do you
  avoid talk radio because it makes your blood boil?
- Then explore the [Congressional Voting Records Data Set][uci-voting-record]
  from the UCI Machine Learning Repository!
- Try to predict party affiliation based on a set of historical votes.

[uci-voting-record]: http://archive.ics.uci.edu/ml/datasets/Congressional+Voting+Records
[cspan]: http://www.c-span.org/

```{r loadData, echo=FALSE}
cols <- c("party","handicapped_infants","waterproject_cost_sharing","budget_resolution",
          "medicare_fee_freeze","el_salvador_aid","religious_groups_in_schools",
          "anti_satellite_test_ban","aid_to_contras","mx_missile","immigration",
          "synfuels_corp_cutback","ed_spending","superfund_can_sue","crime",
          "duty_free_exports","export_admin_south_africa")

votes <- read.table("data/house-votes-84.data", header=F, sep=",", col.names=cols)
```

What is the data set?
========================================================
transition: linear

- 16 votes chosen out of the [408 roll call votes][rollCalls] from the second
  session of the 98th Congress (1984) of the United States House of Representatives.
- The votes range from highly partisan to non-partisan.
- Simple random forest fit:

```{r doFit, echo=TRUE, eval=TRUE, cache=TRUE}
library(randomForest)
set.seed(31415)
mdl <- randomForest(as.factor(party) ~.,
                  data=votes, ntree=100)
```

- For details, see shiny app code (and source for this presentation) in [GitHub]

[rollCalls]: https://www.govtrack.us/congress/votes#session=268&chamber[]=2
[github]: https://github.com/ekuns/DevelopingDataProductsProject

Not all variables equally important
========================================================
transition: fade
left: 60%

```{r importancePlot, echo=FALSE}
library(randomForest)
varImpPlot(mdl, main="Variable Importance")
```

***

- Can you figure out why?
- What's special about the Medicare fee freeze?
- A few votes account for most of the predictive power.
- Explore the histograms!

Check out the Shiny App!
========================================================
transition: zoom

- For those interested in the history, links are provided to all votes, along
  with a short summary of each issue.
- You can explore the source data set!  Check histograms of each issue or
  scatterplots of two issues plotted vs each other.  See the list of votes.
- Choose your positions and predict your party affiliation based on those votes.
- To keep the prediction UI simple, only 7 of the 16 votes are selected for the
  model fit and for prediction.
- You can try this application at [ShinyApps.io][shinyAtShiny] or also at
  [a private Shiny server running in AWS][shinyInAws]

[shinyInAws]: http://ec2-52-24-58-86.us-west-2.compute.amazonaws.com/VotingRecord/
[shinyAtShiny]: https://ekuns.shinyapps.io/VotingRecord/
